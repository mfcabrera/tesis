#LyX 1.4.3 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass book
\begin_preamble

\end_preamble
\language english
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single
\papersize letterpaper
\use_geometry true
\use_amsmath 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip smallskip
\quotes_language swedish
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\end_header

\begin_body

\begin_layout Title
Paralell Training of Linear Transductive 
\begin_inset ERT
status collapsed

\begin_layout Standard

{SVM}
\end_layout

\end_inset

s for Automated Text Categorization
\end_layout

\begin_layout Author
\begin_inset ERT
status collapsed

\begin_layout Standard

DRAFT
\backslash

\backslash
 
\backslash

\backslash
 
\backslash

\backslash
 
\backslash

\backslash
 
\end_layout

\begin_layout Standard

\end_layout

\end_inset

 Miguel Fernando Cabrera Granados
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash

\backslash
mfcabrer@unal.edu.co
\end_layout

\begin_layout Standard

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash

\backslash
 
\backslash

\backslash
 
\backslash

\backslash
 
\backslash

\backslash
 
\backslash

\backslash
 
\backslash

\backslash

\end_layout

\begin_layout Standard

Advisor
\backslash

\backslash

\end_layout

\begin_layout Standard

Jairo Jos
\backslash
'{e} Espinosa  
\backslash

\backslash
 
\backslash

\backslash
 
\backslash

\backslash
 
\backslash

\backslash
 
\backslash

\backslash

\end_layout

\begin_layout Standard

Presented in Partial Fulfillment 
\backslash

\backslash
 
\end_layout

\begin_layout Standard

of the Requirements 
\backslash

\backslash

\end_layout

\begin_layout Standard

for the Degree of 
\backslash

\backslash

\end_layout

\begin_layout Standard

Ingeniero de Sistemas e Informática 
\backslash

\backslash
 
\backslash

\backslash
 
\backslash

\backslash
 
\end_layout

\begin_layout Standard

Escuela de Sistemas - Facultad de Minas
\backslash

\backslash

\end_layout

\begin_layout Standard

Universidad Nacional de Colombia - Sede Medellín
\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset LatexCommand \tableofcontents{}

\end_inset


\end_layout

\begin_layout Chapter
Overview
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Text classification is a key aspect of text filtering, document management
 and retrieval tasks.
 Besides basic document classification, many problems can be see as instances
 of Text Categorization (TC).
 Spam detection, Web search improvement and automated metadata generation
 are just a few examples this
\begin_inset Note Note
status collapsed

\begin_layout Standard
of the tasks that can be accomplished using automatic techniques for document
 classification
\end_layout

\end_inset

 
\begin_inset LatexCommand \cite{Sebastiani02}

\end_inset

.
 
\begin_inset Note Note
status collapsed

\begin_layout Standard
Add here the fact that the manual classification is at best expensive or
 impossible.
 Also add more examples of automated categorization usages
\end_layout

\end_inset

 Some of those tasks can be achieved by human
\emph on
 
\emph default
beings, but a manual classification is at best expensive and practically
 impossible for large quantities of documents as found in modern information
 systems.
\end_layout

\begin_layout Standard
A text classification technique uses example documents that have been previously
 categorized in classes by an authority in order to learn a model that,
 with a associated error value, can automatically predict the class the
 authority would have given to future documents.
 
\end_layout

\begin_layout Standard
Support Vector Machine 
\begin_inset LatexCommand \cite{Vapnik98}

\end_inset

 is a powerful tool for classifying large datasets, and due the nature of
 the common text representation model, it has been applied successfully
 for automated document classification 
\begin_inset LatexCommand \cite{Joachims98}

\end_inset

.
 An special type of SVM, based on transductive inference (TSVM), has demonstrate
d to be more effective for document classification than the common inductive
 inference based SVMs 
\begin_inset LatexCommand \cite{Joachims99c}

\end_inset

.
\end_layout

\begin_layout Standard
One characteristic of the SVM is that, in its formal definition, the computation
 and storage requirements increase rapidly with the number of training vectors.
 This is due the fact that the SVM classification problem is a Quadratic
 Programming problem (QP) that finds the support vectors in all training
 dataset.
 Solvers of this kind of problem generally scales to 
\begin_inset Formula $O(n^{3})$
\end_inset

 making it a very computationally expensive problem.
\end_layout

\begin_layout Standard
An approach to cope with this limitation is to divide the problem into chunks
 
\begin_inset LatexCommand \cite{Joachims/99a}

\end_inset


\begin_inset LatexCommand \cite{osunaetal97}

\end_inset

 and train those subproblems.
 Even with those optimizations, the problem still has large computational
 requirements, and the required time to train grows sufficiently enough
 for making it not useful for real-time training.
 The implementation of Transductive inference for a SVM requires to solve
 the same problem many times over generally large datasets, until finding
 the optimal classifier.
 This makes the scaling problem for transductive SVM even more difficult,
 therefore, methods for optimizing the training process have to be developed.
\end_layout

\begin_layout Standard
Taking advantage actual trends in processor technologies, where the multi-core
 processor is becoming the norm[CitationHere] parallel implementation of
 such algorithm along with other optimization will help make the application
 of this technique practical in real world situations.
\end_layout

\begin_layout Standard
This work describes an implementation of a parallel SVM using the cascade
 model described in 
\begin_inset LatexCommand \cite{GrafCBDV04}

\end_inset

 using a transductive learning algortithm.
 The first part, Overview introduces the basic concepts a Machine Learning,
 Information Retrieval and Text Categorization......
\end_layout

\begin_layout Section
Machine Learning
\end_layout

\begin_layout Standard
Machine Learning (
\noun on
ML
\noun default
) is concerned with the question of how to construct computer programs that
 automatically improve with experience 
\begin_inset LatexCommand \cite{Mitchell97}

\end_inset

.
 In order to to develop such programs 
\noun on
ML
\noun default
 borrows concepts from many areas suchs Statistics, Information Theory,
 Biology and Control Theory.The learning problem is defined formally in 
\begin_inset LatexCommand \cite{Mitchell97}

\end_inset

 as follows:
\end_layout

\begin_layout Description
Learning: A computer program is said to 
\emph on
learn 
\emph default
from experience 
\begin_inset Formula $E$
\end_inset

 with respect to some class of Task 
\begin_inset Formula $T$
\end_inset

 and performace measuer 
\begin_inset Formula $P$
\end_inset

, if its performace at tasks in 
\begin_inset Formula $T$
\end_inset

, as measured by 
\begin_inset Formula $P$
\end_inset

 improves with 
\begin_inset Formula $E$
\end_inset

.
 
\begin_inset Note Note
status collapsed

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout Standard
In other words, the program learns from an experience commonly represented
 by a group of data belonging to a universe on which the result of Task
 
\begin_inset Formula $T$
\end_inset

 is known.
 Using this information the computer program tries to generalize for over
 the available data, thus learning a representation of the universe.
 
\end_layout

\begin_layout Standard
The way in which an actual computer program realizes the task of learning
 from the experience can different, there are serveral modes with of learning:
\end_layout

\begin_layout Itemize

\emph on
Supervised Learning
\emph default
: In wich the program generates an internal representation that maps inputs,
 to desired ouputs.
 Classification problems can be seen as an instance of this type of learning,
 where the desired output is a binary value stating wheter the input belongs
 to a specific category.
\end_layout

\begin_layout Itemize

\emph on
Semi-supevised Learning
\emph default
: Combines both labeled and unlabeled examples to generate the representation.
\end_layout

\begin_layout Itemize

\emph on
Unsupervised Learning: 
\emph default
Combines both labeled and unlabeled examples to generate the representation
\end_layout

\begin_layout Itemize

\emph on
Reinforcement Learning
\emph default
: In wich the algorithm learns a policy of how to act given an observation
 of the world.
\end_layout

\begin_layout Itemize

\emph on
Transductive Learning
\emph default
: Similar to Semi-supervised Learning, but does not explicitly construct
 a function: instead, tries to predict new outputs based on training inputs,
 training outputs and test input wich are available while training.

\emph on
 
\end_layout

\begin_layout Standard
In this thesis we are going to use a restricted definition in order to ilustrate
 the concept described above.
 I these pages machine learning will refer to a generalized regression character
izing a set of label events 
\begin_inset Formula $\left\{ (x_{1},y_{1}),(x_{2},y_{2}),...,(x_{n},y_{n})\right\} $
\end_inset

 with a function 
\begin_inset Formula $\Phi:X\rightarrow Y$
\end_inset

 from event to label .
 Many researcher has used this setting with success 
\begin_inset LatexCommand \cite{Berger2001}

\end_inset

 .
 The reader will notice the similarity between this definition and the definitio
n of text categorization described in 
\begin_inset LatexCommand \vref{sec:Text-Categorization}

\end_inset

.
 
\end_layout

\begin_layout Standard
The question of how good the function 
\begin_inset Formula $\Phi$
\end_inset

 can generalize has spawned an entire subfield of machine learning called
 computational learning theory.
 Many of the techniques classified in this field have come from development
 of frameworks in this particular subfield, altough no stating how good
 is going to perform an algorithm but creating probabilistic bounds to the
 performace.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Standard
characterizing a set of labeled events f(x1; y1); (x2; y2); : : : (xn; yn)g
 with a function : X ! Y from event to label (or 
\backslash
output").
\end_layout

\end_inset

 Some of techniques generally classified under ML are Artificial Neural
 Networks, Genetics Algorithm, k-Nearest Neighbor, Bayesian Networks and
 and Support Vector Machines (SVM).
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Standard
* overview
\end_layout

\begin_layout Standard
* Learning taxonomy
\end_layout

\begin_layout Standard
Machine learning algorithms are organized into a taxonomy, based on the
 desired outcome of the algorithm.
 Common algorithm types include:
\end_layout

\begin_layout Standard
* Supervised learning ? in which the algorithm generates a function that
 maps inputs to desired outputs.
 One standard formulation of the supervised learning task is the classification
 problem: the learner is required to learn (to approximate) the behavior
 of a function which maps a vector [X_1, X_2, 
\backslash
ldots X_N]
\backslash
, into one of several classes by looking at several input-output examples
 of the function.
 * Unsupervised learning ? which models a set of inputs: labeled examples
 are not available.
 * Semi-supervised learning ? which combines both labeled and unlabeled
 examples to generate an appropriate function or classifier.
 * Reinforcement learning ? in which the algorithm learns a policy of how
 to act given an observation of the world.
 Every action has some impact in the environment, and the environment provides
 feedback that guides the learning algorithm.
 * Transduction ? similar to supervised learning, but does not explicitly
 construct a function: instead, tries to predict new outputs based on training
 inputs, training outputs, and test inputs which are available while training.
 * Learning to learn ? in which the algorithm learns its own inductive bias
 based on previous experience.
\end_layout

\begin_layout Standard
The computational analysis of machine learning algorithms and their performance
 is a branch of theoretical computer science known as computational learning
 theory.
\end_layout

\begin_layout Standard
* differences 
\end_layout

\begin_layout Standard
* statistical machine learning
\end_layout

\begin_layout Standard
* the natural application of machine learning to information retrieval
\end_layout

\end_inset


\end_layout

\begin_layout Section
Information Retrieval
\end_layout

\begin_layout Subsection
Models of Text and Text Representation
\end_layout

\begin_layout Section
Text Categorization
\begin_inset LatexCommand \label{sec:Text-Categorization}

\end_inset


\end_layout

\begin_layout Subsection
Techniques
\end_layout

\begin_layout Section
Parallelization Methods
\end_layout

\begin_layout Standard
The current society of information is facing a new challenge: Thousand of
 Megabytes of information are available not only in the public Internet
 but also in private networks.
 This information is used continuously, but tools for accessing and manipulation
 of data do not fulfil the expectations of the users, hence efficient tools
 are becoming a necessity.
 Text classification becomes a key tool in order to deal with such amounts
 of information.
 Text classification can be used to organize document databases, filter
 Spam from e-mail accounts, or even to learn user?s news reading preferences.
 Search engines for On-line information are a kind of text classifier but
 they often retrieve results far from ?perfect?.
 Most of the results obtained are irrelevant, and in many case the number
 of results and their ranking is far from the desired criteria.
 Techniques derived from Artificial Intelligence and Machine-learning theory
 have contributed to the improvement of such search engines, leading to
 better, faster and more accurate results.
 Kernel methods have become one reliable and robust technique well suited
 to deal with high dimensional problems, ideal for facing text-mining tasks.
 More precisely, the Support Vector Machines have been tested in such tasks
 leading to interesting results.
 These results have been obtained based on the paradigm of Inductive Inference.
 This report contains the results of an application of Support Vector Machines
 to text classification, but now based on the paradigm of Transductive Inference.
 Section 3 summarizes the theoretical background needed to understand how
 Transductive Support Vector Machines (TSVM) work and how they can be used
 to classify text.
 Section 4 includes the different test made in order to evaluate the performance
 of the TSVM algorithm.
 Finally, section 5 presents conclusions and recommendations drawn from
 the realisation of this project.
\end_layout

\begin_layout Standard
A text classification algorithm uses example documents that have been tagged
 with classes by an authority1 to learn a model that, with high accuracy,
 can automatically predict the class the authority would have assigned to
 future documents.
 In cases like topic classification (Figure 1.1) where each example can belong
 to multiple topics, the problem is usually reduced to a series of binary
 classification tasks, Corporate Acquisitions vs.
 not Corporate Acquisitions, Earnings vs.
 not Earnings, etc.
 
\end_layout

\begin_layout Subsection
Tools
\end_layout

\begin_layout Chapter
Text Categorization With SVM
\end_layout

\begin_layout Section
Support Vector Machines
\end_layout

\begin_layout Subsection
Linear SVM for Text Categorization
\end_layout

\begin_layout Subsection
Transductive Learning for SVM
\end_layout

\begin_layout Section
Paralell Method for Training Transuductive SVM
\end_layout

\begin_layout Subsection
Transductive Parallel Linear SVM
\end_layout

\begin_layout Section
Experiments and Results
\end_layout

\begin_layout Subsection
Software
\end_layout

\begin_layout Subsection
Data Sets
\end_layout

\begin_layout Section
Conclusions
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Standard
GENERAL NOTES:
\end_layout

\begin_layout Standard
* When in Transductive take the example of web un-categorized data.
\end_layout

\begin_layout Standard
* In Information retrieval justify the usage of automatic techiques using
 the citation on the CMU Phd Thesis.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset LatexCommand \bibtex[acm]{bibblio}

\end_inset


\end_layout

\end_body
\end_document
